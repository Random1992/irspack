name: pytest for irspack
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: "3.7"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: 3.7
      - name: Build irspack (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install lcov
          IRSPACK_TESTING="true" python setup.py install
      - name: Build irspack (other)
        if: matrix.os != 'ubuntu-latest'
        run: |
          pip install wheel
          python setup.py install
      - name: Run pytest
        run: |
          pip install pytest pytest-cov
          pip install lightfm jaxlib jax dm-haiku optax
          pytest --cov=./irspack tests/
      - name: Generate coverage (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          coverage xml
          lcov -d `pwd` -c -o coverage.info
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.xml,./coverage.info
          verbose: false
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
      - name: Build manylinux Python wheels
        # for now (until publish succeeds)
        if: matrix.os == 'ubuntu-latest' # && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2014_x86_64
        with:
          python-versions: "cp36-cp36m cp37-cp37m cp38-cp38"
          build-requirements: "pybind11 requests"
          pre-build-command: "sh pre-build-wheel-script.sh"
      - name: Publish package
        if: matrix.os == 'ubuntu-latest' # && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_APITOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true
